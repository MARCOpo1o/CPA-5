{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/marco/Documents/GitHub/CPA-5/components/ProfileScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { useContext } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport AppContext from \"./AppContext\";\nimport header from \"./header\";\n\nfunction ProfileScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"Useless Text\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      onChangeText = _useState2[1];\n\n  var _useState3 = useState(\"Useless Text\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      description = _useState4[0],\n      onChangeDescrption = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      number = _useState6[0],\n      onChangeNumber = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      num2 = _useState8[0],\n      onChangeNumber2 = _useState8[1];\n\n  var myContext = useContext(AppContext);\n\n  var _useState9 = useState({\n    name: '',\n    email: ''\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      info = _useState10[0],\n      setInfo = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      name = _useState12[0],\n      setName = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      email = _useState14[0],\n      setEmail = _useState14[1];\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var getData = function getData() {\n    var jsonValue, data;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@profile_info'));\n\n          case 3:\n            jsonValue = _context.sent;\n            data = null;\n\n            if (jsonValue != null) {\n              data = JSON.parse(jsonValue);\n              setInfo(data);\n              setName(data.name);\n              setEmail(data.email);\n              console.log('just set Info, Name and Email');\n            } else {\n              console.log('just read a null value from Storage');\n              setInfo({});\n              setName(\"\");\n              setEmail(\"\");\n            }\n\n            _context.next = 12;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"error in getData \");\n            console.dir(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var storeData = function storeData(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@profile_info', jsonValue));\n\n          case 4:\n            console.log('just stored ' + jsonValue);\n            _context2.next = 11;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"error in storeData \");\n            console.dir(_context2.t0);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var clearAll = function clearAll() {\n    return _regeneratorRuntime.async(function clearAll$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            console.log('in clearData');\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n          case 4:\n            _context3.next = 10;\n            break;\n\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(\"error in clearData \");\n            console.dir(_context3.t0);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.headerBackground,\n    source: require(\"../img/headerbg.jpeg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    sytle: styles.profilepicWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.profilepic,\n    source: require(\"../img/profilepic.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }))), React.createElement(TextInput, {\n    style: styles.name,\n    onChangeText: myContext.setSetting1value,\n    value: myContext.setting1value,\n    placeholder: \"UserNmae\",\n    keyboardType: \"numeric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.pos,\n    onChangeDescrption: onChangeNumber2,\n    value: num2,\n    placeholder: \"Description\",\n    keyboardType: \"numeric\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textinput,\n    placeholder: \"email\",\n    onChangeText: function onChangeText(text) {\n      setEmail(text);\n    },\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Go to Details\",\n    onPress: function onPress() {\n      return navigation.navigate('Details');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  headerBackground: {\n    flex: 1,\n    width: null,\n    alighSelf: 'stretch'\n  },\n  header: {\n    flex: 1,\n    alighItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n    backgroundCOlor: 'rgba(0,0,0,0.5)'\n  },\n  profilepicWrap: {\n    width: 180,\n    height: 180,\n    borderRadius: 100,\n    borderColor: 'rgba(0,0,0,0.4)',\n    borderWidth: 16\n  },\n  profilepic: {\n    flex: 1,\n    width: null,\n    alignSelf: 'stretch',\n    borderRaius: 100,\n    borderColor: '#fff',\n    borderWidth: 4\n  },\n  name: {\n    marginTop: 20,\n    fontSize: 16,\n    color: '#fff',\n    fontWeight: 'bold'\n  },\n  pos: {\n    fontSize: 14,\n    color: '#0394c0',\n    fontWeight: '300',\n    fontStyle: 'italic'\n  },\n  textinput: {\n    margin: 20,\n    fontSize: 20\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"sources":["/Users/marco/Documents/GitHub/CPA-5/components/ProfileScreen.js"],"names":["React","useState","useEffect","useContext","NavigationContainer","AppContext","header","ProfileScreen","navigation","text","onChangeText","description","onChangeDescrption","number","onChangeNumber","num2","onChangeNumber2","myContext","name","email","info","setInfo","setName","setEmail","getData","AsyncStorage","getItem","jsonValue","data","JSON","parse","console","log","dir","storeData","value","stringify","setItem","clearAll","clear","styles","headerBackground","require","profilepicWrap","profilepic","setSetting1value","setting1value","pos","textinput","navigate","StyleSheet","create","flex","width","alighSelf","alighItems","justifyContent","padding","backgroundCOlor","height","borderRadius","borderColor","borderWidth","alignSelf","borderRaius","marginTop","fontSize","color","fontWeight","fontStyle","margin"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { useContext } from 'react';\nimport { Button, View, Text, StyleSheet, Image, TextInput } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AppContext from \"./AppContext\";\n\nimport header from './header';\n\nfunction ProfileScreen({ navigation }) {\n  const [text, onChangeText] = useState(\"Useless Text\");\n  const [description, onChangeDescrption] = useState(\"Useless Text\");\n  const [number, onChangeNumber] = useState(null);\n  const [num2, onChangeNumber2] = useState(null);\n  const myContext = useContext(AppContext);\n  const [info, setInfo] = useState({name:'',email:''});\n  const [name, setName] = useState('');\n  const [email,setEmail] = useState('')\n\n  useEffect(() => {getData()}\n  ,[])\n\n  const getData = async () => {\n    try {\n      // the '@profile_info' can be any string\n      const jsonValue = await AsyncStorage.getItem('@profile_info')\n      let data = null\n      if (jsonValue!=null) {\n        data = JSON.parse(jsonValue)\n        setInfo(data)\n        setName(data.name)\n        setEmail(data.email)\n        console.log('just set Info, Name and Email')\n      } else {\n        console.log('just read a null value from Storage')\n        setInfo({})\n        setName(\"\")\n        setEmail(\"\")\n      }\n\n\n    } catch(e) {\n      console.log(\"error in getData \")\n      console.dir(e)\n      // error reading value\n    }\n}\nconst storeData = async (value) => {\n  try {\n    const jsonValue = JSON.stringify(value)\n    await AsyncStorage.setItem('@profile_info', jsonValue)\n    console.log('just stored '+jsonValue)\n  } catch (e) {\n    console.log(\"error in storeData \")\n    console.dir(e)\n    // saving error\n  }\n}\n\nconst clearAll = async () => {\n  try {\n    console.log('in clearData')\n    await AsyncStorage.clear()\n  } catch(e) {\n    console.log(\"error in clearData \")\n    console.dir(e)\n    // clear error\n  }\n}\n\n  return (\n    <View>\n        <Image style={styles.headerBackground} source={require('../img/headerbg.jpeg')}/>\n          <View>\n            <View sytle={styles.profilepicWrap}>\n              <Image style={styles.profilepic} source={require('../img/profilepic.png')}/>\n            </View>\n          </View>\n        <TextInput\n        style={styles.name}\n        onChangeText={myContext.setSetting1value}\n        value={myContext.setting1value}\n        placeholder=\"UserNmae\"\n        keyboardType=\"numeric\"\n      />\n        <TextInput\n        style={styles.pos}\n        onChangeDescrption={onChangeNumber2}\n        value={num2}\n        placeholder=\"Description\"\n        keyboardType=\"numeric\"\n      />\n      <TextInput\n          style={styles.textinput}\n          placeholder=\"email\"\n          onChangeText={text => {setEmail(text)}}\n          value={email}\n        />\n      <Button\n        title=\"Go to Details\"\n        onPress={() => navigation.navigate('Details')}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  headerBackground: {\n    flex:1,\n    width: null,\n    alighSelf: 'stretch'\n  },\n  header: {\n    flex:1,\n    alighItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n    backgroundCOlor: 'rgba(0,0,0,0.5)',\n  },\n  profilepicWrap: {\n    width: 180,\n    height: 180,\n    borderRadius: 100,\n    borderColor: 'rgba(0,0,0,0.4)',\n    borderWidth: 16,\n  },\n  profilepic: {\n    flex:1,\n    width: null,\n    alignSelf: 'stretch',\n    borderRaius: 100,\n    borderColor: '#fff',\n    borderWidth: 4\n  },\n  name: {\n    marginTop: 20,\n    fontSize: 16, \n    color: '#fff',\n    fontWeight: 'bold'\n  },\n  pos: {\n    fontSize: 14,\n    color: '#0394c0',\n    fontWeight: '300',\n    fontStyle: 'italic'\n  },\n  textinput:{\n    margin:20,\n    fontSize:20\n  },\n});\n\nexport default ProfileScreen;"]},"metadata":{},"sourceType":"module"}