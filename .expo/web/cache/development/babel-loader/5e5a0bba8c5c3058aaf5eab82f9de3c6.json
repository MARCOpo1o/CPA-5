{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/marco/Documents/GitHub/CPA-5/App.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Constants from 'expo-constants';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport DetailsScreen from \"./components/detailedScreen\";\nimport MainScreen from \"./components/MainScreen\";\nimport ProfileScreen from \"./components/ProfileScreen\";\nimport ArtistsScreen from \"./components/ArtistsScreen\";\nimport AppContext from \"./components/AppContext\";\nvar Tab = createBottomTabNavigator();\nvar MainStack = createNativeStackNavigator();\nvar HomeStack = createNativeStackNavigator();\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState('initialValue1'),\n      _useState2 = _slicedToArray(_useState, 2),\n      setting1value = _useState2[0],\n      setSetting1value = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      setting2value = _useState4[0],\n      setSetting2value = _useState4[1];\n\n  var toggleSetting2 = function toggleSetting2() {\n    setting3 ? setSetting2(true) : setSetting2value(false);\n  };\n\n  var userSettings = {\n    setting1name: setting1value,\n    setting2name: setting2value,\n    setSetting1value: setSetting1value,\n    toggleSetting2: toggleSetting2\n  };\n  return React.createElement(AppContext.Provider, {\n    value: userSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, function () {\n    return React.createElement(MainStack.Navigator, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, React.createElement(MainStack.Screen, {\n      name: \"Main\",\n      component: MainScreen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }), React.createElement(MainStack.Screen, {\n      name: \"Artists\",\n      component: ArtistsScreen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }));\n  }), React.createElement(Tab.Screen, {\n    name: \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, function () {\n    return React.createElement(HomeStack.Navigator, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, React.createElement(HomeStack.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }), React.createElement(HomeStack.Screen, {\n      name: \"Details\",\n      component: DetailsScreen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }));\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ecf0f1',\n    padding: 8\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/marco/Documents/GitHub/CPA-5/App.js"],"names":["React","useState","Constants","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","DetailsScreen","MainScreen","ProfileScreen","ArtistsScreen","AppContext","Tab","MainStack","HomeStack","App","setting1value","setSetting1value","setting2value","setSetting2value","toggleSetting2","setting3","setSetting2","userSettings","setting1name","setting2name","headerShown","styles","StyleSheet","create","container","flex","justifyContent","paddingTop","statusBarHeight","backgroundColor","padding","paragraph","margin","fontSize","fontWeight","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,aAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AACA,OAAOC,UAAP;AAEA,IAAMC,GAAG,GAAGN,wBAAwB,EAApC;AACA,IAAMO,SAAS,GAAGR,0BAA0B,EAA5C;AACA,IAAMS,SAAS,GAAGT,0BAA0B,EAA5C;AAEA,eAAe,SAASU,GAAT,GAAe;AAAA;;AAC5B,kBAA0Cb,QAAQ,CAAC,eAAD,CAAlD;AAAA;AAAA,MAAOc,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAA0Cf,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAOgB,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BC,IAAAA,QAAQ,GAAGC,WAAW,CAAC,IAAD,CAAd,GAAuBH,gBAAgB,CAAC,KAAD,CAA/C;AACD,GAFD;;AAGA,MAAMI,YAAY,GAAG;AACnBC,IAAAA,YAAY,EAAER,aADK;AAEnBS,IAAAA,YAAY,EAAEP,aAFK;AAGnBD,IAAAA,gBAAgB,EAAhBA,gBAHmB;AAInBG,IAAAA,cAAc,EAAdA;AAJmB,GAArB;AAMA,SACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEG,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD,CAAK,SAAL;AAAe,IAAA,aAAa,EAAE;AAAEG,MAAAA,WAAW,EAAE;AAAf,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,WACC,oBAAC,SAAD,CAAW,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD,CAAW,MAAX;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAElB,UAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,IAAI,EAAC,SAAvB;AAAiC,MAAA,SAAS,EAAEE,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADD;AAAA,GADH,CADF,EAYE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,WACC,oBAAC,SAAD,CAAW,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,IAAI,EAAC,SAAvB;AAAiC,MAAA,SAAS,EAAED,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,IAAI,EAAC,SAAvB;AAAiC,MAAA,SAAS,EAAEF,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADD;AAAA,GADH,CAZF,CADF,CADA,CADF;AA2BD;AAMD,IAAMoB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE9B,SAAS,CAAC+B,eAHb;AAITC,IAAAA,eAAe,EAAE,SAJR;AAKTC,IAAAA,OAAO,EAAE;AALA,GADoB;AAQ/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,QAAQ,EAAE,EAFD;AAGTC,IAAAA,UAAU,EAAE,MAHH;AAITC,IAAAA,SAAS,EAAE;AAJF;AARoB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport Constants from 'expo-constants';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport DetailsScreen from './components/detailedScreen';\nimport MainScreen from './components/MainScreen';\nimport ProfileScreen from './components/ProfileScreen';\nimport ArtistsScreen from './components/ArtistsScreen';\nimport AppContext from './components/AppContext';\n\nconst Tab = createBottomTabNavigator();\nconst MainStack = createNativeStackNavigator();\nconst HomeStack = createNativeStackNavigator();\n\nexport default function App() {\n  const [setting1value, setSetting1value] = useState('initialValue1');\n  const [setting2value, setSetting2value] = useState(false);\n  const toggleSetting2 = () => {\n    setting3 ? setSetting2(true) : setSetting2value(false);\n  };\n  const userSettings = {\n    setting1name: setting1value,\n    setting2name: setting2value,\n    setSetting1value,\n    toggleSetting2,\n  };\n  return (\n    <AppContext.Provider value={userSettings}>\n    <NavigationContainer>\n      <Tab.Navigator screenOptions={{ headerShown: false }}>\n        <Tab.Screen name=\"Main\">\n          {() => (\n            <MainStack.Navigator>\n              <MainStack.Screen\n                name=\"Main\"\n                component={MainScreen}\n              />\n              <MainStack.Screen name=\"Artists\" component={ArtistsScreen} />\n            </MainStack.Navigator>\n          )}\n        </Tab.Screen>\n        <Tab.Screen name=\"Profile\">\n          {() => (\n            <HomeStack.Navigator>\n              <HomeStack.Screen name=\"Profile\" component={ProfileScreen} />\n              <HomeStack.Screen name=\"Details\" component={DetailsScreen} />\n            </HomeStack.Navigator>\n          )}\n        </Tab.Screen>\n      </Tab.Navigator>\n    </NavigationContainer>\n    </AppContext.Provider>\n  );\n}\n\n\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ecf0f1',\n    padding: 8,\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}